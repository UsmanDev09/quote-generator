{"version":3,"sources":["logo.svg","container/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","state","index","fetchQuote","bind","fetch","then","response","json","data","document","getElementById","innerHTML","text","author","me","this","console","log","setState","id","style","display","flexDirection","width","height","justifyContent","alignItems","onClick","href","class","data-show-count","async","src","charset","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sNAAe,I,wCCsDAA,E,kDApDP,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTC,MAAO,GAEX,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBACtBC,MAAM,+BACDC,MAAK,SAASC,GACf,OAAOA,EAASC,UAEnBF,MAAK,SAASG,GAEXC,SAASC,eAAe,QAAQC,UAAYH,EAAK,GAAGI,KACpDH,SAASC,eAAe,UAAUC,UAAYH,EAAK,GAAGK,UAdxC,E,yDAmBd,IAAIC,EAAKC,KACTC,QAAQC,IAAIF,KAAKf,MAAMC,OACvBc,KAAKG,SAAS,CACVjB,MAAOc,KAAKf,MAAMC,MAAQ,IAE9BG,MAAM,+BACLC,MAAK,SAASC,GACf,OAAOA,EAASC,UAEnBF,MAAK,SAASG,GACZQ,QAAQC,IAAIH,EAAGd,MAAMC,OACpBQ,SAASC,eAAe,QAAQC,UAAYH,EAAKM,EAAGd,MAAMC,OAAOW,KACjEH,SAASC,eAAe,UAAUC,UAAYH,EAAKM,EAAGd,MAAMC,OAAOY,Y,+BAQvE,OAEI,sBAAKM,GAAG,YAAYC,MAAO,CAACC,QAAQ,OAAOC,cAAc,SAASC,MAAM,OAAOC,OAAO,QAAQC,eAAe,SAASC,WAAW,UAAjI,UACI,qBAAKP,GAAG,SACR,qBAAKA,GAAI,WACT,wBAAQA,GAAI,YAAYQ,QAAWZ,KAAKb,WAAxC,wBACA,yBAAQiB,GAAG,cAAX,UAAyB,mBAAGS,KAAK,gDAAgDC,MAAM,uBAAuBC,kBAAgB,QAArG,mBAAsH,wBAAQC,OAAK,EAACC,IAAI,0CAA0CC,QAAQ,oB,GA9ChNC,aCQJC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1B0B,M","file":"static/js/main.0a1bb7c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\r\nclass Main extends Component{\r\n        constructor(props){\r\n            super(props);\r\n           \r\n            this.state = {\r\n                index: 0\r\n            }\r\n            this.fetchQuote = this.fetchQuote.bind(this);\r\n        fetch(\"https://type.fit/api/quotes\")\r\n            .then(function(response) {\r\n            return response.json();\r\n        })\r\n        .then(function(data) {\r\n          \r\n            document.getElementById(\"text\").innerHTML = data[0].text;\r\n            document.getElementById(\"author\").innerHTML = data[0].author;\r\n        });\r\n        }\r\n    \r\n        fetchQuote(){\r\n            var me = this;\r\n            console.log(this.state.index)\r\n            this.setState({\r\n                index: this.state.index + 1\r\n            });\r\n            fetch(\"https://type.fit/api/quotes\")\r\n            .then(function(response) {\r\n            return response.json();\r\n        })\r\n        .then(function(data) {\r\n           console.log(me.state.index);\r\n            document.getElementById(\"text\").innerHTML = data[me.state.index].text;\r\n            document.getElementById(\"author\").innerHTML = data[me.state.index].author;\r\n        });         \r\n        }\r\n    render(){\r\n       \r\n\r\n      \r\n\r\n        return(\r\n           \r\n            <div id=\"quote-box\" style={{display:\"flex\",flexDirection:\"column\",width:\"100%\",height:\"100vh\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <div id=\"text\"></div>\r\n                <div id= \"author\"></div>\r\n                <button id =\"new-quote\" onClick = {this.fetchQuote}>NEXT QUOTE</button>\r\n                <button id=\"tweet-quote\"><a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" class=\"twitter-share-button\" data-show-count=\"false\">Tweet</a><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></button>\r\n            </div>\r\n          \r\n\r\n        )\r\n    }\r\n}\r\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport Main from './container/Main';\nfunction App() {\n  return (\n    <Main></Main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}